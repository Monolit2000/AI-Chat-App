// .sidebar {
//     width: 250px;
//     min-height: 100%;
//   }
  
//   ul {
//     list-style: none;
//     margin: 0;
//     padding: 0;
//   }
  
//   li {
//     transition: background-color 0.3s ease;
//   }


.sidebar {
  scrollbar-width: thin; /* Для Firefox */
  scrollbar-color: #131417 #000000; /* Цвет ползунка и фона */
}

.sidebar::-webkit-scrollbar {
  width: 8px; /* Ширина полосы прокрутки */
}

.sidebar::-webkit-scrollbar-thumb {
  background-color: #2d3748; /* Цвет ползунка */
  border-radius: 4px; /* Закругление */
}

.sidebar::-webkit-scrollbar-track {
  background-color: #2d3748; /* Цвет фона полосы прокрутки */
}


  .sidebar ul li {
    width: 250px;
    min-height: 100%;
  }
  
  .sidebar ul li span {
    display: inline-block;
    max-width: calc(100% - 30px); /* Учитываем место для многоточий */
    overflow: hidden;
    // text-overflow: ellipsis;
    white-space: nowrap;
  }
  
  // .sidebar ul li div ul {
  //   display: none;
  // }
  
  // .sidebar ul li div:hover ul {
  //   display: block;
  // }




  .fade-in {
    opacity: 0;
    animation: fadeIn 1.5s forwards;
  }
  
  @keyframes fadeIn {
    from {
      opacity: 0;
      transform: translateY(10px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  

  .fade-text {
    display: inline-block;        /* Гарантирует, что градиент будет корректно применяться */
    max-width: 150px;             /* Максимальная ширина контейнера (можно настроить под нужды) */
    white-space: nowrap;          /* Не переносить строки */
    overflow: hidden;             /* Скрыть переполненный текст */
    text-overflow: clip;          /* Убирает стандартные многоточия */
    position: relative;           /* Для псевдоэлемента */
  }
  
  .fade-text::after {
    content: '';                  /* Псевдоэлемент для эффекта */
    position: absolute;           /* Абсолютное позиционирование */
    top: 0;
    right: 0;                     /* Применяется к правому краю */
    height: 100%;
    width: 30px;                  /* Площадь с градиентом */
    background: linear-gradient(to right, rgba(255, 255, 255, 0) 0%, rgba(0, 0, 0, 1) 100%);
    pointer-events: none;         /* Псевдоэлемент не должен перекрывать текст */
  }


  .truncate {
    display: block;              /* Устанавливаем блочное поведение для совместимости */
    white-space: nowrap;         /* Запрещаем перенос текста на новую строку */
    overflow: hidden;            /* Скрываем текст, выходящий за пределы контейнера */
    text-overflow: ellipsis;     /* Добавляем многоточие в конце обрезанного текста */
  }

  // .truncate-container {
  //   position: relative;            /* Позволяет правильно позиционировать градиент */
  //   overflow: hidden;              /* Скрывает содержимое за пределами контейнера */
  //   white-space: nowrap;           /* Запрещает перенос строк */
  //   display: inline-block;         /* Чтобы размер контейнера соответствовал содержимому */
  //   max-width: 200px;              /* Установите ширину по своему усмотрению */
  // }
  
  // .truncate::after {
  //   content: '';                   /* Псевдоэлемент для градиента */
  //   position: absolute;
  //   top: 0;
  //   right: 0;
  //   bottom: 0;
  //   width: 50px;                   /* Ширина эффекта затемнения */
  //   background: linear-gradient(to left, rgba(255, 255, 255, 0), rgba(0, 0, 0, 0.8));
  //   pointer-events: none;          /* Градиент не перекрывает события клика */
  // }



  .scrolling-container {
    position: relative;         /* Контейнер для текста */
    overflow: hidden;           /* Скрываем текст, выходящий за пределы */
    white-space: nowrap;        /* Запрещаем перенос строк */
    width: 100%;                /* Ограничиваем ширину контейнера */
  }
  
  .scrolling-text {
    display: inline-block;      /* Гарантирует корректное отображение текста */
    padding-left: 100%;         /* Начинаем анимацию за пределами видимости */
    animation: scroll-text 8s linear infinite; /* Анимация с бесконечным повторением */
  }
  
  @keyframes scroll-text {
    from {
      transform: translateX(0); /* Начинаем с текущей позиции */
    }
    to {
      transform: translateX(-100%); /* Смещаем текст влево на всю его ширину */
    }
  }
  
 